#include "IdiotCopRectifier.hpp"

 void make_names(std::map<std::string,Make> &total) {
  total["AC"] = ACURA;
  total["ACUR"]= ACURA;
  total["ADI"]= AUDI;
  total["AUDI"]= AUDI;
  total["AL"]= ALPINA;
  total["ALFA"]= ALFAROM;
  total["ALFAR"]= ALFAROM;
  total["ALF"]= ALFAROM;
  total["BUIC"] = BUICK;
  total["BUICK"] = BUICK;
  total["BMW"] = BMW;
  total["Chevr"] = CHEVY;
  total["CHEVR"] = CHEVY;
  total["CH"] = CHEVY;
  total["CHR"] = CHRYS;
  total["CHRY"] = CHRYS;
  total["CHRYS"] = CHRYS;
  total["DODGE"] = DODGE;
  total["ESLA"] = TESLA;
  total["FIAT"] = FIAT;
  total["FORD"] = FORD;
  total["Ford"] = FORD;
  total["F"] = FORD;
  total["FR"] = FORD;
  total["GEN"] = GM;
  total["GENE"] = GM;
  total["GENES"] = GM;
  total["GMC"] = GMC;
  total["HO"] = HONDA;
  total["HOND"] = HONDA;
  total["HOND"] = HONDA;
  total["HY"] = HYUND;
  total["HYU"] = HYUND;
  total["HYUN"] = HYUND;
  total["HYUND"] = HYUND;
  total["IS"] = ISUZU;
  total["ISU"] = ISUZU;
  total["ISUZ"] = ISUZU;
  total["ISUZU"] = ISUZU;
  total["CA"] = CADDIE;
  total["INTER"] = INTERNATL;
  total["INTE"] = INTERNATL;
  total["IT"] = INTERNATL;
  total["IU"] = ISUZU;
  total["JAG"] = JAG;
  total["JAGU"] = JAG;
  total["JAGUA"] = JAG;
  total["JEEP"] = JEEP;
  total["KIA"] = KIA;
  total["KI"] = KIA;
  total["KEN"] = KWORTH;
  total["KENW"] = KWORTH;
  total["KENWO"] = KWORTH;
  total["WOR"] = KWORTH;
  total["LA"] = LAMBO;
  total["LE"] = LEXUS;
  total["LEX"] = LEXUS;
  total["LEXU"] = LEXUS;
  total["LEXUS"] = LEXUS;
  total["LIN"] = LINCOLN;
  total["LINC"] = LINCOLN;
  total["LINCO"] = LINCOLN;
  total["RO"] = ROVER;
  total["ROV"] = ROVER;
  total["MAC"] = MACK;
  total["MACK"] = MACK;
  total["MAS"] = MASR;
  total["MASE"] = MASR;
  total["MAZ"] = MAZDA;
  total["MAZD"] = MAZDA;
  total["AZD"] = MAZDA;
  total["MAZDA"] = MAZDA;
  total["ME/BE"] = BENZ;
  total["ME"] = BENZ;
  total["MER"] = MERC;
  total["MER"] = MERC;
  total["MERC"] = MERC;
  total["MERCU"] = MERC;
  total["MINI"] = MINI;
  total["MI"] = MINI;
  total["MIT"] = MITSU;
  total["MITS"] = MITSU;
  total["MITSU"] = MITSU;
  total["NISSA"] = NISSAN;
  total["NS"] = NISSAN;
  total["PORS"] = PORSCE;
  total["PORSC"] = PORSCE;
  total["PO"] = PONTIAC;
  total["PONT"] = PONTIAC;
  total["PONTI"] = PONTIAC;
  total["RAM"] = RAM;
  total["RA"] = RAM;
  total["R"] = RAM;
  total["SATUR"] = SATURN;
  total["SMAR"] = SMART;
  total["SMART"] = SMART;
  total["SU"] = SUBARU;
  total["SUB"] = SUBARU;
  total["SUBA"] = SUBARU;
  total["SUBAR"] = SUBARU;
  total["SUZUK"] = SUZUKU;
  total["TES"] = TESLA;
  total["TESL"] = TESLA;
  total["TESLA"] = TESLA;
  total["TOYOT"] = TOYOTA;
  total["UD"] = UD;
  total["VOL"] = VOLKS;
  total["VOLKS"] = VOLKS;
  total["VOLV"] = VOLVO;
  total["VOL"] = VOLVO;
  total["WORK"] = WORKHORS;
  total["WORKH"] = WORKHORS;
}

void state_names(std::map<std::string,State>& states) {
  states["AL"] = AL;
  states["AK"] = AK;
  states["AZ"] = AZ;
  states["AR"] = AR;
  states["CA"] = CA;
  states["CO"] = CO;
  states["CT"] = CT;
  states["DE"] = DE;
  states["FL"] = FL;
  states["GA"] = GA;
  states["HI"] = HI;
  states["ID"] = ID;
  states["IL"] = IL;
  states["IN"] = IN;
  states["IA"] = IA;
  states["KS"] = KS;
  states["KY"] = KY;
  states["LA"] = LA;
  states["ME"] = ME;
  states["MD"] = MD;
  states["MA"] = MA;
  states["MI"] = MI;
  states["MN"] = MN;
  states["MS"] = MS;
  states["MO"] = MO;
  states["MT"] = MT;
  states["NE"] = NE;
  states["NV"] = NV;
  states["NH"] = NH;
  states["NJ"] = NJ;
  states["NM"] = NM;
  states["NY"] = NY;
  states["NC"] = NC;
  states["ND"] = ND;
  states["OH"] = OH;
  states["OK"] = OK;
  states["OR"] = OR;
  states["PA"] = PA;
  states["RI"] = RI;
  states["SC"] = SC;
  states["SD"] = SD;
  states["TN"] = TN;
  states["TX"] = TX;
  states["UT"] = UT;
  states["VT"] = VT;
  states["VA"] = VA;
  states["WA"] = WA;
  states["WV"] = WV;
  states["WI"] = WI;
  states["WY"] = WY;
}

void colors_names(std::map<std::string,Color>& colors) {
  colors["BK"] = BLACK;
  colors["BK."] = BLACK;
  colors["B"] = BLACK;
  colors["L"] = BLUE;
  colors["BLUE"] = BLUE;
  colors["BLU"] = BLUE;
  colors["BL"] = BLUE;
  colors["BL."] = BLUE;
  colors["BLA"] = BLACK;
  colors["LAC"] = BLACK;
  colors["BLAC"] = BLACK;
  colors["BLACK"] = BLACK;
  colors["LACK"] = BLACK;
  colors["BLK"] = BLACK;
  colors["BR"] = BROWN;
  colors["DK"] = BLACK;
  colors["DK"] = BLACK;
  colors["G"] = GOLD;
  colors["GL"] = GOLD;
  colors["GO"] = GOLD;
  colors["GOL"] = GOLD;
  colors["GOLD"] = GOLD;
  colors["GR"] = GREY;
  colors["GRA"] = GREY;
  colors["G"] = GREY;
  colors["RAY"] = GREY;
  colors["GRAY"] = GREY;
  colors["RY"] = GREY;
  colors["GRY"] = GREY;
  colors["GRE"] = GREEN;
  colors["G"] = GREY;
  colors["HITE"] = WHITE;
  colors["LT"] = LIGHT;
  colors["LT/"] = LIGHT;
  colors["LTG"] = GREEN;
  colors["LTGY"] = GREY;
  colors["N"] = NAVY;
  colors["ORA"] = ORANGE;
  colors["ORAN"] = ORANGE;
  colors["ORANG"] = ORANGE;
  colors["P"] = PINK;
  colors["PR"] = PURPLE;
  colors["R"] = RED;
  colors["RA"] = RED;
  colors["RD"] = RED;
  colors["REEN"] = GREEN;
  colors["RO"] = REDORANGE;
  colors["S"] = SILVER;
  colors["SI"] = SILVER;
  colors["SIL"] = SILVER;
  colors["ILV"] = SILVER;
  colors["SILVE"] = SILVER;
  colors["T"] = TAN;
  colors["TA"] = TAN;
  colors["TAN"] = TAN;
  colors["TN"] = TAN;
  colors["W"] = WHITE;
  colors["WH"] = WHITE;
  colors["WHB"] = WHITE;
  colors["WHITE"] = WHITE;
  colors["WHIT"] = WHITE;
  colors["Y"] = YELLOW;
  colors[".Y"] = YELLOW;
  colors["YEL"] = YELLOW;
  colors["YELL"] = YELLOW;
  colors["YELLO"] = YELLOW;
  colors["YW"] = YELLOW;
}

void model_names(std::map<std::string,Model>& bodies) {
  bodies["2"] = SEDAN2D;
  bodies["2D"] = SEDAN2D;
  bodies["2DSD"] = SEDAN2D;
  bodies["4"] = SEDAN4D;
  bodies["4S"] = SEDAN4D;
  bodies["4D"] = SEDAN4D;
  bodies["4DSD"] = SEDAN4D;
  bodies["BU"] = BUS;
  bodies["BUS"] = BUS;
  bodies["CO"] = CONV;
  bodies["CON"] = CONV;
  bodies["CONV"] = CONV;
  bodies["DUM"] = DUMP;
  bodies["DUMP"] = DUMP;
  bodies["FL"] = FLATBED;
  bodies["FLAT"] = FLATBED;
  bodies["MO"] = MOPED;
  bodies["MOP"] = MOPED;
  bodies["MOPD"] = MOPED;
  bodies["M"] = MOTORCYCLE;
  bodies["MC"] = MOTORCYCLE;
  bodies["MCY"] = MOTORCYCLE;
  bodies["P"] = PICKUP;
  bodies["PICK"] = PICKUP;
  bodies["PK"] = PICKUP;
  bodies["S"] = SEDAN4D;
  bodies["SD"] = SEDAN4D;
  bodies["SDN"] = SEDAN4D;
  bodies["SE"] = SEDAN4D;
  bodies["SED"] = SEDAN4D;
  bodies["SEDN"] = SEDAN4D;
  bodies["SEMI"] = SEMI;
  bodies["SEM"] = SEMI;
  bodies["SP"] = SPORT;
  bodies["SPOR"] = SPORT;
  bodies["ST"] = SPORT;
  bodies["SU"] = SUBN;
  bodies["SUB"] = SUBN;
  bodies["SUBN"] = SUBN;
  bodies["T"] = TAXI;
  bodies["TA"] = TAXI;
  bodies["TAX"] = TAXI;
  bodies["TAXI"] = TAXI;
  bodies["TI"] = TAXI;
  bodies["TR"] = TRACTOR;
  bodies["TRA"] = TRACTOR;
  bodies["TRAC"] = TRACTOR;
  bodies["TRL"] = TRAILER;
  bodies["TRLR"] = TRAILER;
  bodies["UT"] = UTILITY;
  bodies["UTI"] = UTILITY;
  bodies["UTIL"] = UTILITY;
  bodies["VA"] = VAN;
  bodies["VAN"] = VAN;
  bodies["VN"] = VAN;
  bodies["Van"] = VAN;
}
